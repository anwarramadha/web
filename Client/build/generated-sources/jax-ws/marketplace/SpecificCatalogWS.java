
package marketplace;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "specificCatalogWS", targetNamespace = "http://marketplace/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SpecificCatalogWS {


    /**
     * 
     * @param catalogid
     * @param action
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addLike", targetNamespace = "http://marketplace/", className = "marketplace.AddLike")
    @ResponseWrapper(localName = "addLikeResponse", targetNamespace = "http://marketplace/", className = "marketplace.AddLikeResponse")
    @Action(input = "http://marketplace/specificCatalogWS/addLikeRequest", output = "http://marketplace/specificCatalogWS/addLikeResponse")
    public Integer addLike(
        @WebParam(name = "catalogid", targetNamespace = "")
        String catalogid,
        @WebParam(name = "action", targetNamespace = "")
        String action);

    /**
     * 
     * @param catalogid
     * @return
     *     returns java.util.List<marketplace.Marketplace>
     * @throws ClassNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSpecificCatalog", targetNamespace = "http://marketplace/", className = "marketplace.GetSpecificCatalog")
    @ResponseWrapper(localName = "getSpecificCatalogResponse", targetNamespace = "http://marketplace/", className = "marketplace.GetSpecificCatalogResponse")
    @Action(input = "http://marketplace/specificCatalogWS/getSpecificCatalogRequest", output = "http://marketplace/specificCatalogWS/getSpecificCatalogResponse", fault = {
        @FaultAction(className = ClassNotFoundException_Exception.class, value = "http://marketplace/specificCatalogWS/getSpecificCatalog/Fault/ClassNotFoundException")
    })
    public List<Marketplace> getSpecificCatalog(
        @WebParam(name = "catalogid", targetNamespace = "")
        int catalogid)
        throws ClassNotFoundException_Exception
    ;

}
